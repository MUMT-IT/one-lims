"""moved some fields to another model

Revision ID: 025127af31cf
Revises: a9f858682547
Create Date: 2023-10-27 03:30:24.881932

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '025127af31cf'
down_revision = 'a9f858682547'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lab_test_orders', schema=None) as batch_op:
        batch_op.drop_constraint('lab_test_orders_reject_record_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('lab_test_orders_receiver_id_fkey', type_='foreignkey')
        batch_op.drop_column('reject_record_id')
        batch_op.drop_column('finished_at')
        batch_op.drop_column('received_at')
        batch_op.drop_column('receiver_id')

    with op.batch_alter_table('lab_test_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reject_record_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('received_at', sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column('receiver_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'lab_order_reject_records', ['reject_record_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['receiver_id'], ['id'])

    with op.batch_alter_table('lab_test_records_version', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reject_record_id', sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('received_at', sa.DateTime(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('receiver_id', sa.Integer(), autoincrement=False, nullable=True))

    with op.batch_alter_table('lab_tests_version', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True,
               autoincrement=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lab_tests_version', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False,
               autoincrement=False)

    with op.batch_alter_table('lab_test_records_version', schema=None) as batch_op:
        batch_op.drop_column('receiver_id')
        batch_op.drop_column('received_at')
        batch_op.drop_column('reject_record_id')

    with op.batch_alter_table('lab_test_records', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('receiver_id')
        batch_op.drop_column('received_at')
        batch_op.drop_column('reject_record_id')

    with op.batch_alter_table('lab_test_orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('received_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('reject_record_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('lab_test_orders_receiver_id_fkey', 'user', ['receiver_id'], ['id'])
        batch_op.create_foreign_key('lab_test_orders_reject_record_id_fkey', 'lab_order_reject_records', ['reject_record_id'], ['id'])

    # ### end Alembic commands ###
